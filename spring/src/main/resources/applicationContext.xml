<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

       <!--注解的Bean管理和IOC-->
       <context:component-scan base-package="com.kaishengit"/>

       <!--读取properties文件-->
       <context:property-placeholder location="classpath:config.properties"/>

       <!--配置数据源（数据库连接池）-->
       <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
              <property name="driverClassName" value="${jdbc.driver}"/>
              <property name="url" value="${jdbc.url}"/>
              <property name="username" value="${jdbc.username}"/>
              <property name="password" value="${jdbc.password}"/>
       </bean>

       <!--&lt;!&ndash;JDBCTemplate  相当于DbUtils&ndash;&gt;
       <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
              <property name="dataSource" ref="dataSource"/>
       </bean>-->

       <!--JDBC事务管理器-->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource"/>
       </bean>

       <!--注解的事务声明-->
       <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--Mybatis的SqlSessionFactory-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置别名，只需写需要别名的类所在的包，自动生成别名-->
        <property name="typeAliasesPackage" value="com.kaishengit.pojo"/>
        <!--加载Mapper配置文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--其他配置：驼峰命名-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>

    <!--mapper接口的自动扫描，自动将接口的实现类对象放入Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kaishengit.mapper"/>
    </bean>




    <!--<bean id="userDaoImpl" class="com.kaishengit.dao.impl.UserDaoImpl"/>

    <bean id="userService" class="com.kaishengit.service.impl.UserServiceImpl">
            <property name="userDao" ref="userDaoImpl"/>
    </bean>

    <bean id="AopAspect" class="com.kaishengit.aop.AopAspect"/>
    <aop:config>
        <aop:aspect ref="AopAspect">

           &lt;!&ndash; <aop:pointcut id="pt" expression="execution(* com.kaishengit.service..*.*(..))"/>
            <aop:around method="aroundAdvice" pointcut-ref="pt"/>&ndash;&gt;

            &lt;!&ndash;切入点表达式&ndash;&gt;
            <aop:pointcut id="pt" expression="execution(* com.kaishengit.service..*.*(..))"/>
            &lt;!&ndash;前置通知&ndash;&gt;
            <aop:before method="beforeAdvice" pointcut-ref="pt"/>
            &lt;!&ndash;后置通知&ndash;&gt;
            <aop:after-returning method="afterAdvice" pointcut-ref="pt" returning="result"/>
            &lt;!&ndash;异常通知&ndash;&gt;
            <aop:after-throwing method="exceptionAdvice" pointcut-ref="pt" throwing="ex"/>
            &lt;!&ndash;最终通知&ndash;&gt;
            <aop:after method="finallyAdvice" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>-->



    <!--<bean id="userService" class="com.kaishengit.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDaoImpl"/>
        <property name="name" value="张三丰"/>
        <property name="age" value="21"/>
        <property name="list">
            <list>
                <value>A</value>
                <value>B</value>
                <value>C</value>
            </list>
        </property>
        <property name="set">
            <set>
                <value>234.5</value>
                <value>34.21</value>
            </set>
        </property>
        <property name="map">
            <map>
                <entry key="K1" value="V1"></entry>
                <entry key="K2" value="V2"></entry>
            </map>
        </property>
        <property name="properties">
            <props>
                <prop key="P1">V1</prop>
                <prop key="P2">V2</prop>
            </props>
        </property>
    </bean>-->

</beans>